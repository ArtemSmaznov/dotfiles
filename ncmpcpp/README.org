:PROPERTIES:
:ID:       48cc151d-dc50-4642-91a4-6a32deff314b
:END:
#+title:       ncmpcpp
#+author:      Artem Smaznov
#+description: An ncurses Music Player Daemon (MPD) client
#+startup:     overview
#+property:    header-args :tangle config
#+auto_tangle: t

Example configuration file: [[file:/usr/share/doc/ncmpcpp/config]]

* Table of Contents :toc:
- [[#connection-settings][Connection Settings]]
- [[#visualizer][Visualizer]]
- [[#song-format][Song Format]]
- [[#browser-sorting][Browser Sorting]]
- [[#columns-settings][Columns Settings]]
- [[#various-settings][Various Settings]]
- [[#lyrics][Lyrics]]
- [[#colors][Colors]]
- [[#keybindings][Keybindings]]
  - [[#page-specific-keys][Page Specific Keys]]
  - [[#navigation][Navigation]]
  - [[#jump-navigation][Jump Navigation]]
  - [[#playback][Playback]]
  - [[#playlists][Playlists]]
  - [[#lyrics-1][Lyrics]]
  - [[#search][Search]]
  - [[#info][Info]]
  - [[#ui][UI]]
  - [[#activating-enter][Activating (enter)]]
  - [[#sorting][Sorting]]
  - [[#editing-e][Editing (e)]]
  - [[#commands][Commands]]
  - [[#mouse][Mouse]]

* Connection Settings
#+begin_src conf
# mpd_host = $MPD_HOST
# mpd_port = $MPD_PORT
mpd_connection_timeout = 5
#+end_src

Needed for tag editor and file operations to work.
#+begin_src conf
mpd_music_dir = ~/music
mpd_crossfade_time = 5
#+end_src

* Visualizer
#+begin_src conf
visualizer_data_source = "/tmp/mpd.fifo"
visualizer_output_name = "FiFo"
visualizer_in_stereo = "yes"
#visualizer_sync_interval = 0
#+end_src

Note: To enable spectrum frequency visualization you need to compile ncmpcpp
with fftw3 support.

Available values: spectrum, wave, wave_filled, ellipse.
#+begin_src conf
visualizer_type = spectrum
visualizer_fps = 60
visualizer_autoscale = yes
visualizer_look = ●▮
# visualizer_look = "+|"
# visualizer_color = blue, cyan, green, yellow, magenta, red
#+end_src

Note: The next few visualization options apply to the spectrum visualizer.
#+begin_src conf
## Use unicode block characters for a smoother, more continuous look.
## This will override the visualizer_look option. With transparent terminals
## and visualizer_in_stereo set, artifacts may be visible on the bottom half of
## the visualization.
#
visualizer_spectrum_smooth_look = yes
#
## A value between 1 and 5 inclusive. Specifying a larger value makes the
## visualizer look at a larger slice of time, which results in less jumpy
## visualizer output.
#
visualizer_spectrum_dft_size = 2
#
#visualizer_spectrum_gain = 10
#
## Left-most frequency of visualizer in Hz, must be less than HZ MAX
#
#visualizer_spectrum_hz_min = 20
#
## Right-most frequency of visualizer in Hz, must be greater than HZ MIN
#
#visualizer_spectrum_hz_max = 20000
#+end_src

* Song Format
For a song format you can use:
%l - length
%f - filename
%D - directory
%a - artist
%A - album artist
%t - title
%b - album
%y - date
%n - track number (01/12 -> 01)
%N - full track info (01/12 -> 01/12)
%g - genre
%c - composer
%p - performer
%d - disc
%C - comment
%P - priority
$R - begin right alignment

If you want to make sure that a part of the format is displayed only when
certain tags are present, you can archieve it by grouping them with brackets,
e.g. '{%a - %t}' will be evaluated to 'ARTIST - TITLE' if both tags are
present or '' otherwise.  It is also possible to define a list of
alternatives by providing several groups and separating them with '|',
e.g. '{%t}|{%f}' will be evaluated to 'TITLE' or 'FILENAME' if the former is
not present.

Note: If you want to set limit on maximal length of a tag, just put the
appropriate number between % and character that defines tag type, e.g. to
make album take max. 20 terminal cells, use '%20b'.

In addition, formats support markers used for text attributes.  They are
followed by character '$'. After that you can put:

- 0 - default window color (discards all other colors)
- 1 - black
- 2 - red
- 3 - green
- 4 - yellow
- 5 - blue
- 6 - magenta
- 7 - cyan
- 8 - white
- 9 - end of current color
- b - bold text
- u - underline text
- r - reverse colors
- a - use alternative character set

If you don't want to use a non-color attribute anymore, just put it again,
but this time insert character '/' between '$' and attribute character,
e.g. {$b%t$/b}|{$r%f$/r} will display bolded title tag or filename with
reversed colors.

If you want to use 256 colors and/or background colors in formats (the naming
scheme is described below in section about color definitions), it can be done
with the syntax $(COLOR), e.g. to set the artist tag to one of the
non-standard colors and make it have yellow background, you need to write
$(197_yellow)%a$(end). Note that for standard colors this is interchangable
with attributes listed above.

Note: colors can be nested.

#+begin_src conf
#song_list_format = {%a - }{%t}|{$8%f$9}$R{$3%l$9}
#song_status_format = {{%a{ "%b"{ (%y)}} - }{%t}}|{%f}
#song_library_format = {%n - }{%t}|{%f}
#alternative_header_first_line_format = $b$1$aqqu$/a$9 {%t}|{%f} $1$atqq$/a$9$/b
#alternative_header_second_line_format = {{$4$b%a$/b$9}{ - $7%b$9}{ ($4%y$9)}}|{%D}
#current_item_prefix = $(yellow)$r
#current_item_suffix = $/r$(end)
#current_item_inactive_column_prefix = $(white)$r
#current_item_inactive_column_suffix = $/r$(end)
#now_playing_prefix = $b
#now_playing_suffix = $/b
#browser_playlist_prefix = "$2playlist$9 "
#selected_item_prefix = $6
#selected_item_suffix = $9
#modified_item_prefix = $3> $9
#+end_src

* Browser Sorting
Note: Below variables are used for sorting songs in browser.  The sort mode
determines how songs are sorted, and can be used in combination with a sort
format to specify a custom sorting format.  Available values for
browser_sort_mode are "type", "name", "mtime", "format" and "none".

#+begin_src conf
#browser_sort_mode = type
#browser_sort_format = {%a - }{%t}|{%f} {%l}
#+end_src

* Columns Settings
syntax of song columns list format is "column column etc."
- syntax for each column is:
(width of the column)[color of the column]{displayed tag}

Note: Width is by default in %, if you want a column to have fixed size, add
'f' after the value, e.g. (10)[white]{a} will be the column that take 10% of
screen (so the real width will depend on actual screen size), whereas
(10f)[white]{a} will take 10 terminal cells, no matter how wide the screen
is.
- color is optional (if you want the default one, leave the field empty).

Note: You can give a column additional attributes by putting appropriate
character after displayed tag character. Available attributes are:
- r - column will be right aligned
- E - if tag is empty, empty tag marker won't be displayed

You can also:
- give a column custom name by putting it after attributes, separated with
  character ':', e.g. {lr:Length} gives you right aligned column of lengths
  named "Length".
- define sequence of tags, that have to be displayed in case predecessor is
  empty in a way similar to the one in classic song format, i.e. using '|'
  character, e.g. {a|c|p:Owner} creates column named "Owner" that tries to
  display artist tag and then composer and performer if previous ones are not
  available.

#+begin_src conf
#song_columns_list_format = (20)[]{a} (6f)[green]{NE} (50)[white]{t|f:Title} (20)[cyan]{b} (7f)[magenta]{l}
#+end_src

* Various Settings
#+begin_src conf
#
##
## Note: Custom command that will be executed each time song changes. Useful for
## notifications etc.
##
#execute_on_song_change = ""
#
##
## Note: Custom command that will be executed each time player state
## changes. The environment variable MPD_PLAYER_STATE is set to the current
## state (either unknown, play, pause, or stop) for its duration.
##
#
#execute_on_player_state_change = ""
#
#playlist_show_mpd_host = no
#
#playlist_show_remaining_time = no
#
#playlist_shorten_total_times = no
#
#playlist_separate_albums = no
#
##
## Note: Possible display modes: classic, columns.
##
playlist_display_mode = columns
browser_display_mode = columns
search_engine_display_mode = classic
playlist_editor_display_mode = columns
#
#discard_colors_if_item_is_selected = yes
#
#show_duplicate_tags = yes
#
incremental_seeking = yes

seek_time = 5
volume_change_step = 2
#
autocenter_mode = yes
#
# centered_cursor = no
#
##
## Note: You can specify third character which will be used to build 'empty'
## part of progressbar.
progressbar_look = =>
#
## Available values: database, playlist.
##
#default_place_to_search_in = database
#
## Available values: classic, alternative.
user_interface = alternative
#
#data_fetching_delay = yes
#
## Available values: artist, album_artist, date, genre, composer, performer.
media_library_primary_tag = album_artist
media_library_albums_split_by_date = no
#media_library_hide_album_dates = no
#
## Available values: wrapped, normal.
default_find_mode = wrapped
#
#default_tag_editor_pattern = %n - %t
#
#header_visibility = yes
#
#statusbar_visibility = yes
#
## Show the "Connected to ..." message on startup
connected_message_on_startup = yes
titles_visibility = yes
header_text_scrolling = yes
#cyclic_scrolling = no
#
#generate_win32_compatible_filenames = yes
#
allow_for_physical_item_deletion = no
#
##
## Note: If you set this variable, ncmpcpp will try to get info from last.fm in
## language you set and if it fails, it will fall back to english. Otherwise it
## will use english the first time.
##
## Note: Language has to be expressed as an ISO 639 alpha-2 code.
lastfm_preferred_language = en
#
#space_add_mode = add_remove
#
show_hidden_files_in_local_browser = no
#
##
## How shall screen switcher work?
##
## - "previous" - switch between the current and previous screen.
## - "screen1,...,screenN" - switch between given sequence of screens.
##
## Screens available for use: help, playlist, browser, search_engine,
## media_library, playlist_editor, tag_editor, outputs, visualizer, clock,
## lyrics, last_fm.
screen_switcher_mode = previous
#
##
## Note: You can define startup screen by choosing screen from the list above.
startup_screen = playlist
#
##
## Note: You can define startup slave screen by choosing screen from the list
## above or an empty value for no slave screen.
##
#startup_slave_screen = "visualizer"
startup_slave_screen_focus = no
#
##
## Default width of locked screen (in %).  Acceptable values are from 20 to 80.
##
#
locked_screen_width_part = 50
ask_for_locked_screen_width_part = yes

jump_to_now_playing_song_at_start = yes
ask_before_clearing_playlists = yes

clock_display_seconds = no
display_volume_level = yes
display_bitrate = no

display_remaining_time = no
#
## Available values: none, basic, extended, perl.
##
#regular_expressions = perl
#
##
## Note: if below is enabled, ncmpcpp will ignore leading "The" word while
## sorting items in browser, tags in media library, etc.
ignore_leading_the = no
#
##
## Note: if below is enabled, ncmpcpp will ignore diacritics while searching and
## filtering lists. This takes an effect only if boost was compiled with ICU
## support.
##
#ignore_diacritics = no
#
#block_search_constraints_change_if_items_found = yes
#
mouse_support = yes
mouse_list_scroll_whole_page = no
lines_scrolled = 1
#
#empty_tag_marker = <empty>
#
#tags_separator = " | "
#
#tag_editor_extended_numeration = no
#
#media_library_sort_by_mtime = no
#
enable_window_title = yes
#
##
## Note: You can choose default search mode for search engine. Available modes
## are:
##
## - 1 - use mpd built-in searching (no regexes, pattern matching)
##
## - 2 - use ncmpcpp searching (pattern matching with support for regexes, but
##       if your mpd is on a remote machine, downloading big database to process
##       it can take a while
##
## - 3 - match only exact values (this mode uses mpd function for searching in
##       database and local one for searching in current playlist)
##
#
search_engine_default_search_mode = 2
external_editor = vim
#
## Note: set to yes if external editor is a console application.
use_console_editor = yes
#+end_src

* Lyrics
Directory for storing downloaded lyrics. It defaults to ~/.lyrics since other
MPD clients (eg. ncmpc) also use that location.
#+begin_src conf
lyrics_directory = ~/zmedia/music/lyrics
#+end_src

#+begin_src conf
lyrics_fetchers = genius, tekstowo, plyrics, justsomelyrics, jahlyrics, zeneszoveg, internet
#lyrics_fetchers = genius, tekstowo, plyrics, justsomelyrics, jahlyrics, zeneszoveg, internet
#follow_now_playing_lyrics = no
#fetch_lyrics_for_current_song_in_background = no
store_lyrics_in_song_dir = no
#+end_src

* Colors
#+begin_src conf
## It is possible to set a background color by setting a color value
## "<foreground>_<background>", e.g. red_black will set foregound color to red
## and background color to black.
##
## In addition, for terminals that support 256 colors it is possible to set one
## of them by using a number in range [1, 256] instead of color name,
## e.g. numerical value corresponding to red_black is 2_1. To find out if the
## terminal supports 256 colors, run ncmpcpp and check out the bottom of the
## help screen for list of available colors and their numerical values.
##
## What is more, there are two special values for the background color:
## "transparent" and "current". The first one explicitly sets the background to
## be transparent, while the second one allows you to preserve current
## background color and change only the foreground one. It's used implicitly
## when background color is not specified.
##
## Moreover, it is possible to attach format information to selected color
## variables by appending to their end a colon followed by one or more format
## flags, e.g. black:b or red:ur. The following variables support this syntax:
## visualizer_color, color1, color2, empty_tag_color, volume_color,
## state_line_color, state_flags_color, progressbar_color,
## progressbar_elapsed_color, player_state_color, statusbar_time_color,
## alternative_ui_separator_color.
##
## Note: due to technical limitations of older ncurses version, if 256 colors
## are used there is a possibility that you'll be able to use only colors with
## transparent background.
#
#colors_enabled = yes
#
#empty_tag_color = cyan
#
#header_window_color = default
#
#volume_color = default
#
#state_line_color = default
#
#state_flags_color = default:b
#
#main_window_color = yellow
#
#color1 = white
#
#color2 = green
#
#progressbar_color = black:b
#
#progressbar_elapsed_color = green:b
#
#statusbar_color = default
#
#statusbar_time_color = default:b
#
#player_state_color = default:b
#
#alternative_ui_separator_color = black:b
#
#window_border_color = green
#
#active_window_border = red
#+end_src

* Keybindings
:properties:
:header-args: :tangle bindings
:end:
** Page Specific Keys
*** Info
=Require_screen "screen"= - checks whether given screen is currently active.
Accepted values:
- browser
- clock
- help
- media_library
- outputs
- playlist
- playlist_editor
- search_engine
- tag_editor
- visualizer
- last_fm
- lyrics
- selected_items_adder
- server_info
- song_info
- sort_playlist_dialog
- tiny_tag_editor

*** Main Playlist
#+begin_src conf
def_key "ctrl-s"
  sort_playlist

def_key "h"
  require_screen "playlist"
  seek_backward

def_key "l"
  require_screen "playlist"
  seek_forward
#+end_src

*** Browser
#+begin_src conf
def_key "enter"
  enter_directory

def_key "h"
  require_screen "browser"
  jump_to_parent_directory

def_key "l"
  require_screen "browser"
  enter_directory

def_key "D"
  delete_browser_items

def_key "ctrl-s"
  toggle_browser_sort_mode
#+end_src

*** Search Engine
#+begin_src conf
def_key "l"
  require_screen "search_engine"
  run_action

def_key "y"
  start_searching

def_key "escape"
  reset_search_engine
#+end_src

*** Media Library
#+begin_src conf
def_key "`"
  toggle_library_tag_type

def_key "ctrl-s"
  toggle_media_library_sort_mode
#+end_src

*** Playlist Editor
#+begin_src conf
def_key "e"
  edit_playlist_name

def_key "D"
  delete_stored_playlist
#+end_src

*** Tag Editor
#+begin_src conf
def_key "y"
  save_tag_changes
#+end_src

*** Visualizer
#+begin_src conf
def_key "space"
  toggle_visualization_type

def_key "escape"
  require_screen "visualizer"
  previous_screen

def_key "h"
  require_screen "visualizer"
  seek_backward

def_key "l"
  require_screen "visualizer"
  seek_forward
#+end_src

*** Lyrics
#+begin_src conf
def_key "space"
  require_screen "lyrics"
  toggle_lyrics_update_on_song_change

def_key "e"
  require_screen "lyrics"
  edit_lyrics

def_key "`"
  require_screen "lyrics"
  refetch_lyrics

def_key "escape"
  require_screen "lyrics"
  previous_screen

def_key "q"
  require_screen "lyrics"
  previous_screen

def_key "h"
  require_screen "lyrics"
  seek_backward

def_key "l"
  require_screen "lyrics"
  seek_forward
#+end_src

*** Clock
#+begin_src conf
def_key "escape"
  require_screen "clock"
  previous_screen

def_key "h"
  require_screen "clock"
  seek_backward

def_key "l"
  require_screen "clock"
  seek_forward
#+end_src

*** Song Info
#+begin_src conf
def_key "escape"
  require_screen "song_info"
  previous_screen

def_key "q"
  require_screen "song_info"
  previous_screen
#+end_src

*** Server Info
#+begin_src conf
def_key "escape"
  require_screen "server_info"
  previous_screen

def_key "q"
  require_screen "server_info"
  previous_screen
#+end_src

*** Help
#+begin_src conf
def_key "escape"
  require_screen "help"
  previous_screen

def_key "q"
  require_screen "help"
  previous_screen
#+end_src

*** Last FM
#+begin_src conf
def_key "escape"
  require_screen "last_fm"
  previous_screen

def_key "q"
  require_screen "last_fm"
  previous_screen
#+end_src

** Navigation
*** Basic
#+begin_src conf
def_key "k"
  scroll_up

def_key "j"
  scroll_down

def_key "h"
  previous_column

def_key "l"
  next_column

def_key "up"
  scroll_up

def_key "down"
  scroll_down

def_key "left"
  previous_column

def_key "right"
  next_column
#+end_src

#+begin_src conf
def_key "h"
  master_screen

def_key "l"
  slave_screen

def_key "left"
  master_screen

def_key "right"
  slave_screen
#+end_src

#+begin_src conf
def_key "g"
  move_home

def_key "G"
  move_end
#+end_src

#+begin_src conf
def_key "ctrl-u"
  page_up

def_key "ctrl-d"
  page_down
#+end_src

*** Pages
#+begin_src conf
def_key "tab"
  next_screen

def_key "shift-tab"
  previous_screen

def_key "f1"
  show_help

def_key "1"
  show_playlist

def_key "2"
  show_browser

def_key "2"
  change_browse_mode

def_key "3"
  show_search_engine

def_key "3"
  reset_search_engine

def_key "4"
  show_media_library

def_key "4"
  toggle_media_library_columns_mode

def_key "5"
  show_playlist_editor

def_key "6"
  show_tag_editor

def_key "7"
  show_outputs

def_key "8"
  show_visualizer

def_key "0"
  show_clock
#+end_src

*** Selection
#+begin_src conf
def_key "m"
  select_item

def_key "ctrl-m"
  select_range

def_key "U"
  reverse_selection

def_key "u"
  remove_selection

def_key "b"
  select_album

def_key "M"
  move_selected_items_to

def_key "insert"
  move_selected_items_to
#+end_src

#+begin_src conf
def_key "K"
  select_item
  scroll_up

def_key "J"
  select_item
  scroll_down

def_key "shift-up"
  select_item
  scroll_up

def_key "shift-down"
  select_item
  scroll_down
#+end_src

*** Moving
#+begin_src conf
def_key "ctrl-k"
  move_selected_items_up

def_key "ctrl-j"
  move_selected_items_down
#+end_src

*** Album/Artist Navigation
#+begin_src conf
def_key "["
  scroll_up_album

def_key "]"
  scroll_down_album

def_key "{"
  scroll_up_artist

def_key "}"
  scroll_down_artist
#+end_src

** Jump Navigation
#+begin_src conf
def_key "o"
  jump_to_playing_song

def_key "B"
  jump_to_browser

def_key "B"
  jump_to_playlist_editor

def_key "~"
  jump_to_media_library

def_key "E"
  jump_to_tag_editor
#+end_src

** Playback
*** Controls
#+begin_src conf
def_key "enter"
  play_item

def_key ">"
  next

def_key "<"
  previous

def_key "backspace"
  replay_song

def_key "ctrl-h"
  seek_backward

def_key "ctrl-l"
  seek_forward

def_key "ctrl-g"
  jump_to_position_in_song
#+end_src

*** Modes
#+begin_src conf
def_key "r"
  toggle_repeat

def_key "z"
  toggle_random

def_key "s"
  toggle_single

def_key "c"
  toggle_consume

def_key "Y"
  toggle_replay_gain_mode

def_key "#"
  toggle_bitrate_visibility

def_key "x"
  toggle_crossfade

def_key "X"
  set_crossfade
#+end_src

*** Volume
#+begin_src conf
def_key "="
  volume_up

def_key "-"
  volume_down
#+end_src

** Playlists
Constructing
#+begin_src conf
def_key "space"
  add_item_to_playlist

def_key "a"
  add_selected_items

def_key "A"
  add

def_key "S"
  save_playlist

def_key "T"
  toggle_add_mode
#+end_src

Manipulation
#+begin_src conf
def_key "`"
  add_random_items

def_key "ctrl-r"
  reverse_playlist

def_key "Z"
  shuffle

def_key "ctrl-p"
  set_selected_items_priority
#+end_src

Clearing
#+begin_src conf
def_key "d"
  delete_playlist_items

def_key "C"
  clear_main_playlist

def_key "ctrl-c"
  crop_main_playlist
#+end_src

** Lyrics
#+begin_src conf
def_key "L"
  show_lyrics

#def_key "L"
#  toggle_lyrics_fetcher

def_key "F"
  fetch_lyrics_in_background

def_key "alt-l"
  toggle_fetching_lyrics_in_background
#+end_src

** Search
#+begin_src conf
def_key "\\"
  apply_filter

def_key "ctrl-n"
  select_found_items

def_key "/"
  find

def_key "/"
  find_item_forward

def_key "?"
  find

def_key "?"
  find_item_backward

def_key "n"
  next_found_item

def_key "N"
  previous_found_item

def_key "w"
  toggle_find_mode
#+end_src

** Info
#+begin_src conf
def_key "@"
  show_server_info

def_key "i"
  show_song_info

def_key "I"
  show_artist_info
#+end_src

** UI
#+begin_src conf
def_key "alt-o"
  toggle_playing_song_centering

def_key "alt-p"
  toggle_display_mode

def_key "alt-t"
  toggle_interface

def_key "alt-\\"
  toggle_separators_between_albums

def_key "alt-m"
  toggle_mouse

def_key "alt-L"
  toggle_screen_lock
#+end_src

** Activating (enter)
#+begin_src conf
def_key "enter"
  toggle_output

def_key "enter"
  run_action
#+end_src

** Sorting
#+begin_src conf
def_key "ctrl-k"
  move_sort_order_up

def_key "ctrl-j"
  move_sort_order_down
#+end_src

** Editing (e)
#+begin_src conf
def_key "e"
  edit_song

def_key "e"
  edit_library_tag

def_key "e"
  edit_library_album

def_key "e"
  edit_directory_name
#+end_src

** Commands
#+begin_src conf
def_key ":"
  execute_command

def_key "alt-x"
  execute_command

def_key "alt-u"
  update_database

def_key "q"
  quit
#+end_src

** Mouse
#+begin_src conf
def_key "mouse"
  mouse_event
#+end_src
