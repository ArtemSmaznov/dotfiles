:PROPERTIES:
:ID:       7e0f082a-18a1-42d2-b056-c0be528ddcbc
:END:
#+title:       Dunst
#+author:      Artem Smaznov
#+description: A lightweight replacement for the notification-daemons provided by most desktop environments
#+startup:     overview
#+property:    header-args :tangle ~/.config/dunst/dunstrc
#+auto_tangle: t

* Table of Contents :toc:
- [[#dependencies][Dependencies]]
- [[#global][Global]]
  - [[#display][Display]]
  - [[#geometry][Geometry]]
  - [[#progress-bar][Progress Bar]]
  - [[#text][Text]]
  - [[#icons][Icons]]
  - [[#history][History]]
  - [[#miscadvanced][Misc/Advanced]]
  - [[#wayland][Wayland]]
  - [[#legacy][Legacy]]
  - [[#mouse][Mouse]]
- [[#rules-doc][Rules Doc]]
- [[#rules-examples][Rules Examples]]
- [[#mpd][MPD]]
- [[#bluetooth][Bluetooth]]
- [[#digikam][Digikam]]
- [[#urgency][Urgency]]
- [[#theme][Theme]]
- [[#experimental][Experimental]]

* Dependencies
|-------+---------------------|
| Name  | Description         |
|-------+---------------------|
| [[https://archlinux.org/packages/?name=dunst][dunst]] | Notification daemon |
|-------+---------------------|

#+begin_example shell
sudo pacman -S dunst
#+end_example

* Global
#+begin_src conf
[global]
#+end_src
** Display
#+begin_src conf
# Which monitor should the notifications be displayed on.
monitor = 1

# Display notification on focused monitor.  Possible modes are:
#   mouse: follow mouse pointer
#   keyboard: follow window with keyboard focus
#   none: don't follow anything
#
# "keyboard" needs a window manager that exports the
# _NET_ACTIVE_WINDOW property.
# This should be the case for almost all modern window managers.
#
# If this option is set to mouse or keyboard, the monitor option
# will be ignored.
follow = none
#+end_src

** Geometry
#+begin_src conf
# dynamic width from 0 to 300
# width = (0, 300)
# constant width of 300
# width = 300
width = (300,500)

# The height of a single notification, excluding the frame.
# dynamic height from 0 to 300
height = (0, 300)

# Position the notification in the top right corner
origin = top-right

# Offset from the origin
offset = 38x38

# Scale factor. It is auto-detected if value is 0.
scale = 0

# Maximum number of notification (0 means no limit)
notification_limit = 0
#+end_src

** Progress Bar
#+begin_src conf
# Turn on the progess bar. It appears when a progress hint is passed with
# for example dunstify -h int:value:12
progress_bar = true

# Set the progress bar height. This includes the frame, so make sure
# it's at least twice as big as the frame width.
progress_bar_height = 10

# Set the frame width of the progress bar
progress_bar_frame_width = 1

# Set the minimum width for the progress bar
progress_bar_min_width = 150

# Set the maximum width for the progress bar
progress_bar_max_width = 300


# Show how many messages are currently hidden (because of
# notification_limit).
indicate_hidden = yes

# The transparency of the window.  Range: [0; 100].
# This option will only work if a compositing window manager is
# present (e.g. xcompmgr, compiz, etc.).
transparency = 20

# Draw a line of "separator_height" pixel height between two
# notifications.
# Set to 0 to disable.
separator_height = 2

# Padding between text and separator.
padding = 8

# Horizontal padding.
horizontal_padding = 8

# Padding between text and icon.
text_icon_padding = 0

# Defines width in pixels of frame around the notification window.
# Set to 0 to disable.
frame_width = 0

# Defines color of the frame around the notification window.
# frame_color = "#ac5d2f"

# Size of gap to display between notifications - requires a compositor.
# If value is greater than 0, separator_height will be ignored and a border
# of size frame_width will be drawn around each notification instead.
# Click events on gaps do not currently propagate to applications below.
gap_size = 0

# Define a color for the separator.
# possible values are:
#  * auto: dunst tries to find a color fitting to the background;
#  * foreground: use the same color as the foreground;
#  * frame: use the same color as the frame;
#  * anything else will be interpreted as a X color.
separator_color = auto

# Sort messages by urgency.
sort = yes

# Don't remove messages, if the user is idle (no mouse or keyboard input)
# for longer than idle_threshold seconds.
# Set to 0 to disable.
# A client can set the 'transient' hint to bypass this. See the rules
# section for how to disable this if necessary
idle_threshold = 120
#+end_src

** Text
#+begin_src conf
font = FontAwesome 12

# The spacing between lines.  If the height is smaller than the
# font height, it will get raised to the font height.
line_height = 0

# Possible values are:
# full: Allow a small subset of html markup in notifications:
#        <b>bold</b>
#        <i>italic</i>
#        <s>strikethrough</s>
#        <u>underline</u>
#
#        For a complete reference see
#        <https://developer.gnome.org/pango/stable/pango-Markup.html>.
#
# strip: This setting is provided for compatibility with some broken
#        clients that send markup even though it's not enabled on the
#        server. Dunst will try to strip the markup but the parsing is
#        simplistic so using this option outside of matching rules for
#        specific applications *IS GREATLY DISCOURAGED*.
#
# no:    Disable markup parsing, incoming notifications will be treated as
#        plain text. Dunst will not advertise that it has the body-markup
#        capability if this is set as a global setting.
#
# It's important to note that markup inside the format option will be parsed
# regardless of what this is set to.
markup = full

# The format of the message.  Possible variables are:
#   %a  appname
#   %s  summary
#   %b  body
#   %i  iconname (including its path)
#   %I  iconname (without its path)
#   %p  progress value if set ([  0%] to [100%]) or nothing
#   %n  progress value if set without any extra characters
#   %%  Literal %
# Markup is allowed
format = "<b>%s</b>\n%b"

# Alignment of message text.
# Possible values are "left", "center" and "right".
alignment = left

# Vertical alignment of message text and icon.
# Possible values are "top", "center" and "bottom".
vertical_alignment = center

# Show age of message if message is older than show_age_threshold
# seconds.
# Set to -1 to disable.
show_age_threshold = -1

# When word_wrap is set to no, specify where to make an ellipsis in long lines.
# Possible values are "start", "middle" and "end".
ellipsize = middle

# Ignore newlines '\n' in notifications.
ignore_newline = no

# Stack together notifications with the same content
stack_duplicates = true

# Hide the count of stacked notifications with the same content
hide_duplicate_count = false

# Display indicators for URLs (U) and actions (A).
show_indicators = yes
#+end_src

** Icons
#+begin_src conf
# Recursive icon lookup. You can set a single theme, instead of having to
# define all lookup paths.
enable_recursive_icon_lookup = true

# Set icon theme (only used for recursive icon lookup)
icon_theme = Papirus, Papirus-Dark
# You can also set multiple icon themes, with the leftmost one being used first.
# icon_theme = "Adwaita, breeze"

# Align icons left/right/off
icon_position = left

# Scale small icons up to this size, set to 0 to disable. Helpful
# for e.g. small files or high-dpi screens. In case of conflict,
# max_icon_size takes precedence over this.
min_icon_size = 32

# Scale larger icons down to this size, set to 0 to disable
max_icon_size = 128

# Paths to default icons (only neccesary when not using recursive icon lookup)
icon_path = /usr/share/icons/Papirus-Dark/16x16/status/:/usr/share/icons/Papirus-Dark/16x16/devices/
#+end_src

** History
#+begin_src conf
# Should a notification popped up from history be sticky or timeout
# as if it would normally do.
sticky_history = yes

# Maximum amount of notifications kept in history
history_length = 40
#+end_src

** Misc/Advanced
#+begin_src conf
# dmenu path.
dmenu = /usr/bin/wofi --dmenu --insensitive --prompt dunst

# Browser for opening urls in context menu.
browser = /usr/bin/xdg-open

# Always run rule-defined scripts, even if the notification is suppressed
always_run_script = true

# Define the title of the windows spawned by dunst
title = Dunst

# Define the class of the windows spawned by dunst
class = Dunst

# Define the corner radius of the notification window
# in pixel size. If the radius is 0, you have no rounded
# corners.
# The radius will be automatically lowered if it exceeds half of the
# notification height to avoid clipping text and/or icons.
corner_radius = 0

# Ignore the dbus closeNotification message.
# Useful to enforce the timeout set by dunst configuration. Without this
# parameter, an application may close the notification sent before the
# user defined timeout.
ignore_dbusclose = false
#+end_src

** Wayland
These settings are Wayland-specific. They have no effect when using X11
#+begin_src conf
# Uncomment this if you want to let notications appear under fullscreen
# applications (default: overlay)
# layer = top

# Set this to true to use X11 output on Wayland.
force_xwayland = false
#+end_src

** Legacy
Use the Xinerama extension instead of RandR for multi-monitor support.
This setting is provided for compatibility with older nVidia drivers that
do not support RandR and using it on systems that support RandR is highly
discouraged.

By enabling this setting dunst will not be able to detect when a monitor
is connected or disconnected which might break follow mode if the screen
layout changes.
#+begin_src conf
force_xinerama = false
#+end_src

** Mouse
Defines list of actions for each mouse event
Possible values are:
- none: Don't do anything.
- do_action: Invoke the action determined by the action_name rule. If there is no such action, open the context menu.
- open_url: If the notification has exactly one url, open it. If there are multiple ones, open the context menu.
- close_current: Close current notification.
- close_all: Close all notifications.
- context: Open context menu for the notification.
- context_all: Open context menu for all notifications.
These values can be strung together for each mouse event, and will be executed
in sequence.
#+begin_src conf
mouse_left_click = context, close_current
mouse_middle_click = do_action
mouse_right_click = close_all
#+end_src

* Rules Doc
Every section that isn't one of the above is interpreted as a rules to
override settings for certain messages.

Messages can be matched by
   appname (discouraged, see desktop_entry)
   body
   category
   desktop_entry
   icon
   match_transient
   msg_urgency
   stack_tag
   summary

and you can override the
   background
   foreground
   format
   frame_color
   fullscreen
   new_icon
   set_stack_tag
   set_transient
   set_category
   timeout
   urgency
   icon_position
   skip_display
   history_ignore
   action_name
   word_wrap
   ellipsize
   alignment
   hide_text

Shell-like globbing will get expanded.

Instead of the appname filter, it's recommended to use the desktop_entry filter.
GLib based applications export their desktop-entry name. In comparison to the appname,
the desktop-entry won't get localized.

SCRIPTING
You can specify a script that gets run when the rule matches by
setting the "script" option.
The script will be called as follows:
  script appname summary body icon urgency
where urgency can be "LOW", "NORMAL" or "CRITICAL".

NOTE: It might be helpful to run dunst -print in a terminal in order
to find fitting options for rules.

* Rules Examples
#+begin_src conf
# Disable the transient hint so that idle_threshold cannot be bypassed from the
# client
#[transient_disable]
#    match_transient = yes
#    set_transient = no
#
# Make the handling of transient notifications more strict by making them not
# be placed in history.
#[transient_history_ignore]
#    match_transient = yes
#    history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

# [ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    skip_display = true

#[skip-display]
#    # This notification will not be displayed, but will be included in the history
#    summary = "foobar"
#    skip_display = yes

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#
#[stack-volumes]
#    appname = "some_volume_notifiers"
#    set_stack_tag = "volume"
#
# vim: ft=cfg
#+end_src

* MPD
#+begin_src conf
[mpd]
appname = "mpd-notification"
history_ignore = yes
timeout = 10
#+end_src

* Bluetooth
#+begin_src conf
[blueman]
appname = "blueman"
urgency = low
#+end_src

* Digikam
#+begin_src conf
[digikam]
appname = "digikam"
urgency = low
#+end_src

* Urgency
IMPORTANT: colors have to be defined in quotation marks.
Otherwise the "#" and following would be interpreted as a comment.
#+begin_src conf
[urgency_low]
msg_urgency = low
timeout = 10
#+end_src

#+begin_src conf
[urgency_normal]
msg_urgency = normal
timeout = 30
#+end_src

#+begin_src conf
[urgency_critical]
msg_urgency = critical
timeout = 0
#+end_src

* Theme
#+begin_src conf
# Start flavours
[base16_low]
msg_urgency = low
background = "#3c3836"
foreground = "#bdae93"

[base16_normal]
msg_urgency = normal
background = "#504945"
foreground = "#d5c4a1"

[base16_critical]
msg_urgency = critical
frame_color = "#fabd2f"
background = "#fb4934"
foreground = "#ebdbb2"
# End flavours
#+end_src

* Experimental
Experimental features that may or may not work correctly. Do not expect them to have a consistent behaviour across releases.
#+begin_src conf
[experimental]
#+end_src

Calculate the dpi to use on a per-monitor basis.
If this setting is enabled the Xft.dpi value will be ignored and instead dunst
will attempt to calculate an appropriate dpi value for each monitor using the
resolution and physical size. This might be useful in setups where there are
multiple screens with very different dpi values.
#+begin_src conf
per_monitor_dpi = false
#+end_src

